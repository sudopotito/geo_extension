name: "Release Notes"

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag of release like v2.0.0"
        required: true
        type: string
  release:
    types: [released]

permissions:
  contents: write

env:
  REPO: ${{ github.repository }}

jobs:
  regen-notes:
    name: "Regenerate release notes"
    runs-on: ubuntu-latest

    steps:
      - name: Update notes
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          RELEASE_TAG: ${{ github.event.inputs.tag_name || github.event.release.tag_name }}
        run: |
          # Generate default notes for the tag
          NEW_NOTES=$(gh api --method POST -H "Accept: application/vnd.github+json" \
              /repos/$REPO/releases/generate-notes \
              -f tag_name="$RELEASE_TAG" \
            | jq -r '.body' \
            | sed -E '/^\* (chore|ci|test|docs|style)/d' \
            | sed -E 's/by @mergify //')

          # Find the release id for this tag
          RELEASE_ID=$(gh api -H "Accept: application/vnd.github+json" \
              /repos/$REPO/releases/tags/$RELEASE_TAG \
            | jq -r '.id')

          # Patch the release body
          gh api --method PATCH -H "Accept: application/vnd.github+json" \
            /repos/$REPO/releases/$RELEASE_ID \
            -f body="$NEW_NOTES"
